#!/bin/bash

# $1 is the nex file that is phylip compatible to read in
# This will use F84 model in dnadist, then call neighbor to find the tree.
# Lastly this script will clean up the fragmented-multi-line tree output
# by neighbor. (Why did they do that???)

# $2 is the number of data sets to do at once

#rm -f dnadist_tmp_infile_mult dnadist_tmp_outfile_mult neighbor_tmp_outfile_mult neighbor_tmp_outtree_mult neighbor_input_mult dnadist_JC_input_mult

# Control if we save failed files and where
saveFailFiles=0
saveFailFilesLocation=/home/dcha223/local/tmp/run_F84_error_files/

# Controls where the temporary files are located
myPrefix="/tmp/"
myPrefixSed="\/tmp\/"

# Create these files so that we get the expected menu's in dnadist and neighbor.
rm -f infile
touch outtree outfile


shapeParam=0.8
trans_tranv=3.0

if [ $# -ne 2 ] 
then
    echo "Must specifify phylip ready file to proccess and number of data"
    exit 0
fi

awkFailed=1
if [ $awkFailed -eq 1 ]
then 
    awkFailed=0

    myrand=$RANDOM
    dnadistInputFile=${myPrefix}/dnadist_F84-GR4_input_mult_${myrand}$$
    neighborInputFile=${myPrefix}/neighbor_input_mult_${myrand}$$
    while [ $(( (myrand + 1)/2 )) -eq $(( myrand/2 )) ] || [ -e $dnadistInputFile ] || [ -e $neighborInputFile ]
    do
        myrand=$RANDOM
        dnadistInputFile=${myPrefix}/dnadist_F84-GR4_input_mult_${myrand}$$
        neighborInputFile=${myPrefix}/neighbor_input_mult_${myrand}$$
    done

    
    #cp $1 ${myPrefix}dnadist_tmp_infile_mult${myrand}$$
    
    #echo "My rand $myrand"
    
    
    #sed "s/NUMALIGN/$2/" dnadist_F84-GR4_input_mult_TEMPLATE | sed "s/_mult/_mult${myrand}$$/" | sed "s/dnadist_tmp/${myPrefixSed}dnadist_tmp/" > ${myPrefix}dnadist_F84-GR4_input_mult${myrand}$$

    # Write dnadist input file to control the parameters on dnadist
    echo "$1" > $dnadistInputFile
    echo "f" >> $dnadistInputFile
    echo "${myPrefix}dnadist_tmp_outfile_mult${myrand}$$" >> $dnadistInputFile
    echo "g" >> $dnadistInputFile
    echo "t" >> $dnadistInputFile
    echo "$trans_tranv" >> $dnadistInputFile
    echo "m" >> $dnadistInputFile
    echo "d" >> $dnadistInputFile
    echo "$2" >> $dnadistInputFile
    echo "y" >> $dnadistInputFile
    echo "$shapeParam" >> $dnadistInputFile

    #sed "s/RANDOM/$myrand/" neighbor_input_mult_TEMPLATE | sed "s/NUMALIGN/$2/" | sed "s/_mult/_mult${myrand}$$/" | sed "s/dnadist_tmp/${myPrefixSed}dnadist_tmp/" | sed "s/neighbor_tmp/${myPrefixSed}neighbor_tmp/" > ${myPrefix}neighbor_input_mult${myrand}$$
    
    # Write neighbor input file to control the parameters for neighbor
    
    echo "${myPrefix}dnadist_tmp_outfile_mult${myrand}$$" >> $neighborInputFile
    echo "f" >> $neighborInputFile
    echo "${myPrefix}neighbor_tmp_outfile_mult${myrand}$$" >> $neighborInputFile
    echo "m" >> $neighborInputFile
    echo "$2" >> $neighborInputFile
    echo "${myrand}" >> $neighborInputFile
    echo "y" >> $neighborInputFile
    echo "f" >> $neighborInputFile
    echo "${myPrefix}neighbor_tmp_outtree_mult${myrand}$$" >> $neighborInputFile
    
    dnadist < $dnadistInputFile 2>&1 > /dev/null
    neighbor < $neighborInputFile 2>&1 > /dev/null
    
    if [ ! -f ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$ ]
    then
        echo "${myPrefix}neighbor_tmp_outtree_mult${myrand}$$ does not exist."
        touch neighborfiledoesntexist${myrand}$$.txt
        exit 0
    fi
    
    
    # This might be OS specific. Especially the \r part. Works on Mac OS X
#    tempAwkOut=`awk 'BEGIN {treeNumber=0} {all=all $0} /;/ {treeNumber++;print "tree rep_" treeNumber " = " all ;all=""}' ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$`
#    if [ "x$tempAwkOut" = "x" ]
#    then
#        awkFailed=1
#        #echo "NOTHING OUTPUTED BY AWK COMMAND"
#    fi
    if [[ ! -e ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$ ]] 
    then
        awkFailed=1
    fi

    if [ $awkFailed -eq 1 ] && [ $saveFailFiles -eq 1 ]
    then
        cp ${myPrefix}dnadist_tmp_infile_mult${myrand}$$  $saveFailFilesLocation    
        cp ${myPrefix}dnadist_tmp_outfile_mult${myrand}$$ $saveFailFilesLocation
        cp ${myPrefix}neighbor_tmp_outfile_mult${myrand}$$ $saveFailFilesLocation
        cp ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$ $saveFailFilesLocation
        cp ${myPrefix}neighbor_input_mult${myrand}$$ $saveFailFilesLocation
        cp ${myPrefix}dnadist_F84-GR4_input_mult${myrand}$$ $saveFailFilesLocation
    fi
    # Actually output the trees.

    # Clean up files regardless
    rm -f $dnadistInputFile $neighborInputFile ${myPrefix}neighbor_tmp_outfile_mult${myrand}$$ ${myPrefix}neighbor_input_mult${myrand}$$ ${myPrefix}dnadist_tmp_outfile_mult${myrand}$$

fi

# Only output if we can output something useful.
echo "#NEXUS"
echo "begin trees;"
#sleep 1
#echo $tempAwkOut | sed 's/;/;\n/g' #  This doesn't work well on Mac
awk 'BEGIN {treeNumber=0} {all=all $0} /;/ {treeNumber++;print "tree rep_" treeNumber " = " all ;all=""}' ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$
echo "end;"

rm -rf ${myPrefix}neighbor_tmp_outtree_mult${myrand}$$
#sleep 10

